DROP TABLE IF EXISTS um_user_group;
DROP TABLE IF EXISTS um_user;
DROP TABLE IF EXISTS um_user_type;
DROP TABLE IF EXISTS um_group;


CREATE TABLE um_user_type ( 
	id                   serial,
	"type"               varchar(50)  NOT NULL ,
	created_at           timestamp,
	updated_at           timestamp,
	CONSTRAINT pk_um_type PRIMARY KEY ( id ),
	CONSTRAINT user_role_name_unique UNIQUE ( "type" ) 
 );
 
CREATE TABLE um_group ( 
	id                   bigint  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name                 varchar(150)  NOT NULL ,
	description          varchar(255)   ,
	created_at           timestamp,
	created_by           varchar(200)   ,
	updated_at           timestamp,
	CONSTRAINT pk_um_group_id PRIMARY KEY ( id )
 );
 
CREATE TABLE um_user ( 
	id                   bigint  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	identity_provider_id varchar(255)  NOT NULL ,
	firstname            varchar(200)   ,
	lastname             varchar(200)   ,
	email                varchar(255)  NOT NULL ,
	username             varchar(200)   ,
	phone                varchar(50)   ,
	city                 varchar(70)   ,
	"user_role"          varchar(70),
	"state"              varchar(70)   ,
	postal_code          varchar(15)   ,
	country              varchar(70)   ,
	created_at           timestamp,
	updated_at           timestamp,
	user_type_id         integer   ,
	address              varchar(100)   ,
	CONSTRAINT pk_um_user PRIMARY KEY ( id ),
	CONSTRAINT identity_provider_id_unique UNIQUE ( identity_provider_id ) ,
	CONSTRAINT user_email_unique UNIQUE ( email ) ,
	CONSTRAINT user_username_unique UNIQUE ( username ) 
 );

CREATE TABLE um_user_group ( 
	id                   bigint  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	user_id              bigint  NOT NULL ,
	group_id             bigint  NOT NULL ,
	"role"               varchar(50)   ,
	joined_at            TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT pk_um_user_group_id PRIMARY KEY ( id )
 );

CREATE INDEX fk_um_user_um_type ON um_user (user_type_id);
CREATE INDEX fk_um_user_group_um_group ON um_user_group ( group_id );
CREATE INDEX fk_um_user_group_um_user ON um_user_group ( user_id );

ALTER TABLE um_user ADD CONSTRAINT fk_um_user_um_type FOREIGN KEY ( user_type_id ) REFERENCES um_user_type( id );
ALTER TABLE um_user_group ADD CONSTRAINT fk_um_user_group_um_user FOREIGN KEY ( user_id ) REFERENCES um_user( id );
ALTER TABLE um_user_group ADD CONSTRAINT fk_um_user_group_um_group FOREIGN KEY ( group_id ) REFERENCES um_group( id );

INSERT INTO um_user_type (type) VALUES ('ADMIN'), ('STUDENT'), ('INTRUCTOR'), ('ADMINISTRATOR');
